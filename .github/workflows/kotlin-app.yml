# This is a basic workflow to help you get started with Actions

name: Continuous Integration for kotlin app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" , "feature/branch" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: saipavandocker2022
  REPOSITORY_NAME: demo-kotlin
  # github.repository as <account>/<repo>
  IMAGE_NAME: $REGISTRY/$REPOSITORY_NAME

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Check Java Version
        run: java -version
      
      - name: Docker version
        run: |
          docker -v
          docker
          docker images -a

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Runs a custom script
        run: |
          ls -al

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.awsaccesskey }}
          aws-secret-access-key: ${{ secrets.awssecretaccesskey }}

      - name: Run AWS CLI command
        run: aws s3 ls
      
      - name: Change the permissions for gradlew script to execute
        run: chmod +x gradlew
      - name: Build with gradlew
        run: ./gradlew build
      - name: Runs a custom script
        run: |
          ls -al

      - name: docker build
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker images -a
      
      - name: docker login 
        run: docker login -u ${{ secrets.dockerhubusername }} -p ${{ secrets.dockerhubpassword }}
      
      - name: Docker image push to docker hub
        id: build-image
        run: |
         docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}
         echo "image=${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $OUTPUTFILE

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./task-definition.json
          container-name: kotlinapp
          image: ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to ECS Fargate
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: kotlinservice
          cluster: Githubactionstesting
          wait-for-service-stability: true



      